// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogOptionPoolCreation extends ethereum.Event {
  get params(): LogOptionPoolCreation__Params {
    return new LogOptionPoolCreation__Params(this);
  }
}

export class LogOptionPoolCreation__Params {
  _event: LogOptionPoolCreation;

  constructor(event: LogOptionPoolCreation) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get base(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get short(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get optionType(): string {
    return this._event.parameters[4].value.toString();
  }

  get liquidity(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get bcv(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get strike(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get maturity(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class OptionPoolFactory extends ethereum.SmartContract {
  static bind(address: Address): OptionPoolFactory {
    return new OptionPoolFactory("OptionPoolFactory", address);
  }

  optionPools(param0: Bytes): Address {
    let result = super.call("optionPools", "optionPools(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toAddress();
  }

  try_optionPools(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "optionPools",
      "optionPools(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateOptionPoolCall extends ethereum.Call {
  get inputs(): CreateOptionPoolCall__Inputs {
    return new CreateOptionPoolCall__Inputs(this);
  }

  get outputs(): CreateOptionPoolCall__Outputs {
    return new CreateOptionPoolCall__Outputs(this);
  }
}

export class CreateOptionPoolCall__Inputs {
  _call: CreateOptionPoolCall;

  constructor(call: CreateOptionPoolCall) {
    this._call = call;
  }

  get base_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get short_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get optionType_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get liquidity_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get bcv_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get strike_(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get maturity_(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateOptionPoolCall__Outputs {
  _call: CreateOptionPoolCall;

  constructor(call: CreateOptionPoolCall) {
    this._call = call;
  }
}
